// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/lasdesistemas/menstruscrapper (interfaces: Client)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	precios_claros "github.com/lasdesistemas/menstruscrapper/precios-claros"
	reflect "reflect"
)

// MockClient is a mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// ObtenerListaDePrecios mocks base method
func (m *MockClient) ObtenerListaDePrecios(arg0 []string, arg1 []int, arg2 string) ([]*precios_claros.Producto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ObtenerListaDePrecios", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*precios_claros.Producto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ObtenerListaDePrecios indicates an expected call of ObtenerListaDePrecios
func (mr *MockClientMockRecorder) ObtenerListaDePrecios(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObtenerListaDePrecios", reflect.TypeOf((*MockClient)(nil).ObtenerListaDePrecios), arg0, arg1, arg2)
}

// ObtenerListaDeTampones mocks base method
func (m *MockClient) ObtenerListaDeTampones(arg0 []string) ([]int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ObtenerListaDeTampones", arg0)
	ret0, _ := ret[0].([]int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ObtenerListaDeTampones indicates an expected call of ObtenerListaDeTampones
func (mr *MockClientMockRecorder) ObtenerListaDeTampones(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObtenerListaDeTampones", reflect.TypeOf((*MockClient)(nil).ObtenerListaDeTampones), arg0)
}

// ObtenerListaDeToallitas mocks base method
func (m *MockClient) ObtenerListaDeToallitas(arg0 []string) ([]int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ObtenerListaDeToallitas", arg0)
	ret0, _ := ret[0].([]int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ObtenerListaDeToallitas indicates an expected call of ObtenerListaDeToallitas
func (mr *MockClientMockRecorder) ObtenerListaDeToallitas(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObtenerListaDeToallitas", reflect.TypeOf((*MockClient)(nil).ObtenerListaDeToallitas), arg0)
}

// ObtenerSucursales mocks base method
func (m *MockClient) ObtenerSucursales() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ObtenerSucursales")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ObtenerSucursales indicates an expected call of ObtenerSucursales
func (mr *MockClientMockRecorder) ObtenerSucursales() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObtenerSucursales", reflect.TypeOf((*MockClient)(nil).ObtenerSucursales))
}
